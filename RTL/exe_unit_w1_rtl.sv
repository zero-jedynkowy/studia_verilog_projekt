/* Generated by Yosys 0.23+38 (git sha1 f9db7c059, x86_64-w64-mingw32-g++ 9.2.1 -Os) */

module \$paramod$ad5fc92dec76241174115f6d1940fa93bf59d497\mod1 (i_argA, i_argB, o_result, o_status);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire checkFlag;
  input [3:0] i_argA;
  wire [3:0] i_argA;
  input [3:0] i_argB;
  wire [3:0] i_argB;
  wire [3:0] maxValue;
  output [3:0] o_result;
  wire [3:0] o_result;
  output [3:0] o_status;
  wire [3:0] o_status;
  wire sign1;
  wire sign2;
  wire [3:0] status;
  wire [3:0] temp;
  wire [3:0] temp1;
  wire [3:0] temp2;
  assign _000_ = ~i_argA[0];
  assign _001_ = ~i_argB[0];
  assign _002_ = ~i_argA[1];
  assign _003_ = ~i_argB[1];
  assign _004_ = ~i_argA[3];
  assign _005_ = ~i_argB[2];
  assign _006_ = ~i_argA[2];
  assign _007_ = i_argA[1] & _003_;
  assign _008_ = _002_ | i_argB[1];
  assign _009_ = i_argA[1] | _003_;
  assign _010_ = i_argA[1] ^ i_argB[1];
  assign _011_ = i_argA[3] | i_argB[3];
  assign _012_ = ~_011_;
  assign _013_ = i_argA[3] ^ i_argB[3];
  assign _014_ = _004_ ^ i_argB[3];
  assign _015_ = i_argA[0] & i_argB[0];
  assign _016_ = _013_ & _015_;
  assign _017_ = _000_ & i_argB[0];
  assign _018_ = i_argA[0] | _001_;
  assign _019_ = _005_ & i_argA[2];
  assign _020_ = i_argB[2] | _006_;
  assign _021_ = _007_ | _018_;
  assign _022_ = _010_ | _017_;
  assign _023_ = _009_ & _021_;
  assign _024_ = _008_ & _022_;
  assign _025_ = i_argB[2] ^ i_argA[2];
  assign _026_ = ~_025_;
  assign _027_ = _023_ & _026_;
  assign _028_ = _024_ | _025_;
  assign _029_ = _019_ | _027_;
  assign _030_ = _020_ & _028_;
  assign _031_ = i_argA[0] & _001_;
  assign o_result[0] = i_argA[0] ^ i_argB[0];
  assign _032_ = _025_ | o_result[0];
  assign _033_ = _010_ | _031_;
  assign _034_ = _010_ | _032_;
  assign _035_ = ~_034_;
  assign _036_ = _011_ & _035_;
  assign _037_ = _012_ | _034_;
  assign _038_ = _030_ | _035_;
  assign _039_ = _029_ & _037_;
  assign _040_ = _030_ | _036_;
  assign _041_ = _017_ | _040_;
  assign _042_ = _031_ | _039_;
  assign _043_ = _014_ & _042_;
  assign _044_ = _041_ & _043_;
  assign _045_ = _016_ | _044_;
  assign o_result[1] = _010_ ^ _045_;
  assign _046_ = ~o_result[1];
  assign _047_ = i_argB[3] & _038_;
  assign _048_ = ~_047_;
  assign _049_ = i_argA[3] | _030_;
  assign o_result[3] = _048_ & _049_;
  assign _050_ = ~o_result[3];
  assign _051_ = i_argA[1] & i_argB[1];
  assign _052_ = _010_ & _015_;
  assign _053_ = _051_ | _052_;
  assign _054_ = _013_ & _053_;
  assign _055_ = _009_ & _033_;
  assign _056_ = _040_ & _055_;
  assign _057_ = _024_ & _039_;
  assign _058_ = _056_ | _057_;
  assign _059_ = _014_ & _058_;
  assign _060_ = _054_ | _059_;
  assign o_result[2] = _025_ ^ _060_;
  assign _061_ = _025_ & _054_;
  assign _062_ = ~_061_;
  assign _063_ = i_argB[2] & i_argA[2];
  assign _064_ = _013_ & _063_;
  assign _065_ = ~_064_;
  assign _066_ = _062_ & _065_;
  assign checkFlag = ~_066_;
  assign o_status[1] = o_result[3] & _066_;
  assign _067_ = o_result[0] & o_result[1];
  assign _068_ = o_result[0] ^ o_result[1];
  assign _069_ = o_result[0] ^ _046_;
  assign _070_ = o_result[3] & o_result[2];
  assign _071_ = o_result[3] ^ o_result[2];
  assign _072_ = _050_ ^ o_result[2];
  assign _073_ = _069_ | _071_;
  assign _074_ = _068_ | _072_;
  assign _075_ = _066_ & _074_;
  assign o_status[2] = _073_ & _075_;
  assign o_status[3] = _067_ & _070_;
  assign maxValue = 4'h7;
  assign o_status[0] = checkFlag;
  assign sign1 = i_argA[3];
  assign sign2 = i_argB[3];
  assign status = { o_status[3:1], checkFlag };
  assign temp = o_result;
  assign temp1 = 4'b0xxx;
  assign temp2 = 4'b0xxx;
endmodule

module \$paramod$ad5fc92dec76241174115f6d1940fa93bf59d497\mod2 (i_argA, i_argB, o_result, o_status);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  input [3:0] i_argA;
  wire [3:0] i_argA;
  input [3:0] i_argB;
  wire [3:0] i_argB;
  output [3:0] o_result;
  wire [3:0] o_result;
  output [3:0] o_status;
  wire [3:0] o_status;
  wire sign1;
  wire sign2;
  wire [3:0] status;
  wire [3:0] temp;
  wire [3:0] temp1;
  wire [3:0] temp2;
  wire [31:0] x;
  assign _00_ = ~i_argB[2];
  assign _01_ = ~i_argA[2];
  assign _02_ = ~i_argA[1];
  assign _03_ = ~i_argB[1];
  assign _04_ = ~i_argB[0];
  assign _05_ = ~i_argA[0];
  assign _06_ = i_argB[2] & _01_;
  assign _07_ = _00_ | i_argA[2];
  assign _08_ = i_argB[0] & _05_;
  assign _09_ = _04_ | i_argA[0];
  assign _10_ = i_argA[1] & _03_;
  assign _11_ = _02_ | i_argB[1];
  assign _12_ = _02_ ^ i_argB[1];
  assign _13_ = i_argA[1] ^ i_argB[1];
  assign _14_ = _09_ & _12_;
  assign _15_ = _08_ | _13_;
  assign _16_ = _00_ & i_argA[2];
  assign _17_ = i_argB[2] | _01_;
  assign _18_ = _11_ & _17_;
  assign _19_ = _10_ | _16_;
  assign _20_ = _15_ & _18_;
  assign _21_ = _14_ | _19_;
  assign _22_ = _07_ & _21_;
  assign _23_ = _06_ | _20_;
  assign _24_ = _04_ & i_argA[0];
  assign _25_ = i_argB[2] ^ i_argA[2];
  assign _26_ = _24_ | _25_;
  assign _27_ = _15_ | _26_;
  assign _28_ = ~_27_;
  assign _29_ = _22_ & _27_;
  assign _30_ = _23_ | _28_;
  assign _31_ = i_argA[3] & i_argB[3];
  assign _32_ = ~_31_;
  assign _33_ = _30_ & _31_;
  assign _34_ = _29_ | _32_;
  assign _35_ = i_argA[3] | i_argB[3];
  assign _36_ = ~_35_;
  assign _37_ = _22_ & _36_;
  assign _38_ = _23_ | _35_;
  assign o_result[0] = _34_ & _38_;
  assign o_status[2] = _33_ | _37_;
  assign o_result[3:1] = 3'h0;
  assign { o_status[3], o_status[1:0] } = 3'h0;
  assign sign1 = i_argA[3];
  assign sign2 = i_argB[3];
  assign status = { 1'h0, o_status[2], 2'h0 };
  assign temp = { 3'h0, o_result[0] };
  assign temp1 = 4'b0xxx;
  assign temp2 = 4'b0xxx;
  assign x = { 31'h00000000, o_result[0] };
endmodule

module \$paramod$ad5fc92dec76241174115f6d1940fa93bf59d497\mod3 (i_argA, i_argB, o_result, o_status);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  input [3:0] i_argA;
  wire [3:0] i_argA;
  input [3:0] i_argB;
  wire [3:0] i_argB;
  output [3:0] o_result;
  wire [3:0] o_result;
  output [3:0] o_status;
  wire [3:0] o_status;
  wire sign1;
  wire [3:0] status;
  wire [3:0] temp;
  wire [31:0] x;
  assign _00_ = ~i_argB[1];
  assign _01_ = ~i_argB[0];
  assign _02_ = ~i_argB[2];
  assign _03_ = ~i_argB[3];
  assign _04_ = _02_ & _03_;
  assign o_status[0] = ~_04_;
  assign _05_ = i_argB[1] & i_argB[0];
  assign _06_ = ~_05_;
  assign _07_ = o_status[0] | _06_;
  assign o_status[1] = i_argA[3] & _07_;
  assign _08_ = _00_ | i_argB[0];
  assign _09_ = o_status[0] | _08_;
  assign _10_ = i_argA[2] & _09_;
  assign _11_ = o_status[1] & _10_;
  assign _12_ = o_status[1] ^ _10_;
  assign _13_ = i_argB[1] | _01_;
  assign _14_ = o_status[0] | _13_;
  assign _15_ = i_argA[1] & _14_;
  assign _16_ = i_argB[1] | i_argB[0];
  assign _17_ = o_status[0] | _16_;
  assign _18_ = i_argA[0] & _17_;
  assign _19_ = ~_18_;
  assign _20_ = _15_ & _18_;
  assign _21_ = _15_ ^ _19_;
  assign o_status[2] = _12_ ^ _21_;
  assign o_status[3] = _11_ & _20_;
  assign o_result[0] = _04_ & _18_;
  assign o_result[1] = _04_ & _15_;
  assign o_result[2] = _04_ & _10_;
  assign o_result[3] = _04_ & o_status[1];
  assign sign1 = i_argB[3];
  assign status = o_status;
  assign temp[3] = o_status[1];
  assign x[31:4] = 28'h0000000;
endmodule

module \$paramod$ad5fc92dec76241174115f6d1940fa93bf59d497\mod4 (i_argA, o_result, o_status);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  input [3:0] i_argA;
  wire [3:0] i_argA;
  output [3:0] o_result;
  wire [3:0] o_result;
  output [3:0] o_status;
  wire [3:0] o_status;
  wire sign1;
  wire [3:0] status;
  wire [3:0] temp;
  assign _00_ = ~i_argA[3];
  assign _01_ = i_argA[1] | i_argA[0];
  assign _02_ = i_argA[1] | i_argA[2];
  assign _03_ = ~_02_;
  assign _04_ = i_argA[0] | _02_;
  assign o_status[0] = ~_04_;
  assign o_result[3] = i_argA[3] & _04_;
  assign _05_ = i_argA[1] & _00_;
  assign _06_ = i_argA[1] & i_argA[0];
  assign _07_ = ~_06_;
  assign _08_ = i_argA[0] & i_argA[3];
  assign _09_ = i_argA[3] & _01_;
  assign _10_ = _07_ & _09_;
  assign o_result[1] = _05_ | _10_;
  assign o_status[3] = _03_ & _08_;
  assign o_result[2] = i_argA[2] ^ _09_;
  assign o_result[0] = i_argA[0];
  assign o_status[2:1] = { 1'h1, o_result[3] };
  assign sign1 = i_argA[3];
  assign status = { o_status[3], 1'h1, o_result[3], o_status[0] };
  assign { temp[3], temp[0] } = { o_result[3], i_argA[0] };
endmodule

module exe_unit_w1_rtl(i_oper, i_argA, i_argB, i_clk, i_rsn, o_result, o_status);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  input [3:0] i_argA;
  wire [3:0] i_argA;
  input [3:0] i_argB;
  wire [3:0] i_argB;
  input i_clk;
  wire i_clk;
  input [1:0] i_oper;
  wire [1:0] i_oper;
  input i_rsn;
  wire i_rsn;
  wire [3:0] new_result;
  wire [3:0] new_status;
  output [3:0] o_result;
  reg [3:0] o_result;
  wire [3:0] o_result1;
  wire [3:0] o_result2;
  wire [3:0] o_result3;
  wire [3:0] o_result4;
  output [3:0] o_status;
  reg [3:0] o_status;
  wire [3:0] o_status1;
  wire [3:0] o_status2;
  wire [3:0] o_status3;
  wire [3:0] o_status4;
  assign _004_ = ~i_oper[0];
  assign _005_ = ~i_oper[1];
  assign _006_ = i_oper[0] & _005_;
  assign _007_ = o_result2[0] & _006_;
  assign _008_ = i_oper[0] & i_oper[1];
  assign _009_ = o_result4[0] & _008_;
  assign _010_ = _007_ | _009_;
  assign _011_ = _004_ & i_oper[1];
  assign _012_ = o_result3[0] & _011_;
  assign _013_ = _004_ & _005_;
  assign _014_ = o_result1[0] & _013_;
  assign _015_ = _012_ | _014_;
  assign new_result[0] = _010_ | _015_;
  assign _016_ = o_result3[1] & _011_;
  assign _017_ = o_result2[1] & _006_;
  assign _018_ = _016_ | _017_;
  assign _019_ = o_result1[1] & _013_;
  assign _020_ = o_result4[1] & _008_;
  assign _021_ = _019_ | _020_;
  assign new_result[1] = _018_ | _021_;
  assign _022_ = o_result3[2] & _011_;
  assign _023_ = o_result2[2] & _006_;
  assign _024_ = _022_ | _023_;
  assign _025_ = o_result1[2] & _013_;
  assign _026_ = o_result4[2] & _008_;
  assign _027_ = _025_ | _026_;
  assign new_result[2] = _024_ | _027_;
  assign _028_ = o_result1[3] & _013_;
  assign _029_ = o_result2[3] & _006_;
  assign _030_ = _028_ | _029_;
  assign _031_ = o_result4[3] & _008_;
  assign _032_ = o_result3[3] & _011_;
  assign _033_ = _031_ | _032_;
  assign new_result[3] = _030_ | _033_;
  assign _034_ = o_status3[0] & _011_;
  assign _035_ = o_status2[0] & _006_;
  assign _036_ = _034_ | _035_;
  assign _037_ = o_status1[0] & _013_;
  assign _038_ = o_status4[0] & _008_;
  assign _039_ = _037_ | _038_;
  assign new_status[0] = _036_ | _039_;
  assign _040_ = o_status3[1] & _011_;
  assign _041_ = o_status2[1] & _006_;
  assign _042_ = _040_ | _041_;
  assign _043_ = o_status1[1] & _013_;
  assign _044_ = o_status4[1] & _008_;
  assign _045_ = _043_ | _044_;
  assign new_status[1] = _042_ | _045_;
  assign _046_ = o_status3[2] & _011_;
  assign _047_ = o_status2[2] & _006_;
  assign _048_ = _046_ | _047_;
  assign _049_ = o_status1[2] & _013_;
  assign _050_ = o_status4[2] & _008_;
  assign _051_ = _049_ | _050_;
  assign new_status[2] = _048_ | _051_;
  assign _052_ = o_status1[3] & _013_;
  assign _053_ = o_status2[3] & _006_;
  assign _000_ = _052_ | _053_;
  assign _001_ = o_status4[3] & _008_;
  assign _002_ = o_status3[3] & _011_;
  assign _003_ = _001_ | _002_;
  assign new_status[3] = _000_ | _003_;
  always @(posedge i_clk)
    if (!i_rsn) o_status[0] <= 1'h0;
    else o_status[0] <= new_status[0];
  always @(posedge i_clk)
    if (!i_rsn) o_status[1] <= 1'h0;
    else o_status[1] <= new_status[1];
  always @(posedge i_clk)
    if (!i_rsn) o_status[2] <= 1'h0;
    else o_status[2] <= new_status[2];
  always @(posedge i_clk)
    if (!i_rsn) o_status[3] <= 1'h0;
    else o_status[3] <= new_status[3];
  always @(posedge i_clk)
    if (!i_rsn) o_result[0] <= 1'h0;
    else o_result[0] <= new_result[0];
  always @(posedge i_clk)
    if (!i_rsn) o_result[1] <= 1'h0;
    else o_result[1] <= new_result[1];
  always @(posedge i_clk)
    if (!i_rsn) o_result[2] <= 1'h0;
    else o_result[2] <= new_result[2];
  always @(posedge i_clk)
    if (!i_rsn) o_result[3] <= 1'h0;
    else o_result[3] <= new_result[3];
  \$paramod$ad5fc92dec76241174115f6d1940fa93bf59d497\mod1  m_mod1 (
    .i_argA(i_argA),
    .i_argB(i_argB),
    .o_result(o_result1),
    .o_status(o_status1)
  );
  \$paramod$ad5fc92dec76241174115f6d1940fa93bf59d497\mod2  m_mod2 (
    .i_argA(i_argA),
    .i_argB(i_argB),
    .o_result(o_result2),
    .o_status(o_status2)
  );
  \$paramod$ad5fc92dec76241174115f6d1940fa93bf59d497\mod3  m_mod3 (
    .i_argA(i_argA),
    .i_argB(i_argB),
    .o_result(o_result3),
    .o_status(o_status3)
  );
  \$paramod$ad5fc92dec76241174115f6d1940fa93bf59d497\mod4  m_mod4 (
    .i_argA(i_argA),
    .o_result(o_result4),
    .o_status(o_status4)
  );
endmodule
